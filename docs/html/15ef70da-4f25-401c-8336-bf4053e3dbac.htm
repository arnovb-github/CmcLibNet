<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Powershell Export example</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="15ef70da-4f25-401c-8336-bf4053e3dbac" /><meta name="Description" content="Shows different export options in CmcLibNet." /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vovin.CmcLibNet, a .Net library for Commence RM<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/13d8bdcb-02fa-44f3-80db-d84941da7620.htm" title="Vovin.CmcLibNet, a .Net library for Commence RM" tocid="roottoc">Vovin.CmcLibNet, a .Net library for Commence RM</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/13d8bdcb-02fa-44f3-80db-d84941da7620.htm" title="Vovin.CmcLibNet documentation" tocid="13d8bdcb-02fa-44f3-80db-d84941da7620">Vovin.CmcLibNet documentation</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/092890cb-e367-4511-b649-8e0f057a12ca.htm" title="Teaser" tocid="092890cb-e367-4511-b649-8e0f057a12ca">Teaser</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9b3678d3-f63f-4192-92bb-e430907c8cc4.htm" title="Powershell Basic example" tocid="9b3678d3-f63f-4192-92bb-e430907c8cc4">Powershell Basic example</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/15ef70da-4f25-401c-8336-bf4053e3dbac.htm" title="Powershell Export example" tocid="15ef70da-4f25-401c-8336-bf4053e3dbac">Powershell Export example</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/26126b67-d6a9-4ae9-95cb-309d32e261dc.htm" title="VBScript example" tocid="26126b67-d6a9-4ae9-95cb-309d32e261dc">VBScript example</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/551759d4-7595-29d9-745f-14d8e9379f92.htm" title="API Reference" tocid="8902777a-ec4f-48ac-97d2-ee7b0405bf80">API Reference</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Powershell Export example</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>Shows different export options in CmcLibNet.</p></div><div class="collapsibleAreaRegion" id="Basic"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID1RB')" onkeypress="SectionExpandCollapse_CheckKey('ID1RB', event)" tabindex="0"><img id="ID1RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Basic export example</span></div><div id="ID1RBSection" class="collapsibleSection"><p>
          First of all, we must tell PowerShell that we want to use CmcLibNet.
          <strong>Important:</strong> if you installed the Vovin.CmcLibNet.dll somewhere else, change the path reference accordingly.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EASADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EASADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EASADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EASADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-pshell-cmdlet">Add-Type</span> -Path <span class="highlight-literal">"C:\Program Files\Vovin\Vovin.CmcLibNet\Vovin.CmcLibNet.dll"</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EASADAAA");</script><p>We want to use features in the ExportEngine</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAQADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAQADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAQADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAQADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$export = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportEngine</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAQADAAA");</script><p>
          The export engine interface is also a property of the <span class="code">Vovin.CmcLibNet.Application</span> object.
          Depending on the code-style you like you can also get it like this (commented out here because we already have a reference):
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAOADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAOADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAOADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAOADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment"># $app = New-Object -TypeName Vovin.CmcLibNet.Application</span>
<span class="highlight-comment"># $export = $app.Export</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAOADAAA");</script><p>Now define an export path to use for this example (our Desktop)</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAMADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAMADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAMADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAMADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$exportPath = <span class="highlight-namespace">[System.Environment]::GetFolderPath([System.Environment+SpecialFolder]</span>::Desktop)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAMADAAA");</script><p>
          There are three types of datasets you can export: <strong>categories</strong>, <strong>views</strong> and <strong>cursors</strong>.
        </p><p>
          Export the <em>Contact</em> category to a file named <strong>contacts.xml</strong>:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAJADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAJADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAJADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAJADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"contacts.xml"</span>))</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAJADAAA");</script><p>
          The export engine cleans up after itself after a succesful export.
          If you want to perform another export you have to spin it up again
        </p><p>
          Export view <em>Account List</em> (a view in the <strong>Tutorial</strong> database) to a file named <strong>accounts.xml</strong>.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAGADAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAGADAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAGADAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAGADAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$export = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportEngine
$export.ExportView(<span class="highlight-literal">"Account List"</span>, $exportPath + <span class="highlight-literal">"Account List View.xml"</span>) <span class="highlight-comment"># note that view names are case-sensitive!</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAGADAAA");</script><p>(An example of exporting cursors can be found in the remainer of this document.)</p><p>
          Note that not all viewtypes can be exported. This is a limitation of the Commence API.
        </p><p>
          Tip: if you want to export the currently active view, supply either null or an empty string: <span class="code">ExportView(null,file,settings)</span>.
        </p><p>
          In the above examples, the resulting export files will be in <strong>Xml</strong> format. <strong>Xml</strong> is the default format of the export engine.
          Node names and values will be escaped so as to to comply with <a href="http://www.w3.org/TR/xml/" target="_blank">XML specs</a></p><p>
          The file-extension you supply to the export files have no special meaning, they can be anything.
        </p><p>CmcLibNet will export connected items as separate nodes, not as delimited strings.</p></div><div class="collapsibleAreaRegion" id="Custom"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Custom formats</span></div><div id="ID2RBSection" class="collapsibleSection"><p>To export to other formats, you have to supply an argument of type <a href="e1c5c390-5547-744c-ae07-c0c297f76b36.htm">IExportSettings</a>.</p><p>You can create a one from scratch with</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EA2ACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EA2ACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EA2ACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EA2ACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$BrandNew_ExportSettingsObject = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportSettings <span class="highlight-comment"># create Settings object from scratch</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EA2ACAAA");</script><p>But it is usually easier to use the default settings property provided by the export engine.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAZACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAZACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAZACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAZACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$export = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportEngine
$settings = $export.Settings</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAZACAAA");</script><p>
          The settings object controls all export customization.
          One of its most important is the export format (see <a href="d06ce4fc-f904-0a50-9dfd-47c85167b93e.htm">ExportFormat</a>).<br />
          CmcLibNet can also export to plain text, Html, Json and Microsoft Excel.
        </p><p>Let's see some of this in action. Set it to <strong>Json</strong></p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAWACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAWACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAWACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAWACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Json <span class="highlight-comment"># export to JSON</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAWACAAA");</script><p>Tell it to skip connected values. This is useful when exporting categories when you do not want all connected data.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAUACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAUACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAUACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAUACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.SkipConnectedItems = <span class="highlight-keyword">$true</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAUACAAA");</script><p>Make Commence return values in a consistent format.
        In CmcLibNet this includes connected values, something which Commence does not do natively.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EASACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EASACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EASACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EASACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.Canonical = <span class="highlight-keyword">$true</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EASACAAA");</script><p>
          When you export data, chances are you will want to import them into something else.
          That often requires some form of field-mapping.
          For argument's sake, let's say Commence uses the fieldnames 'firstName' and 'lastName',
          but the receiving application uses 'First_Name' and 'Last_Name'.
          There are several ways to overcome this.
          One is to define a view in Commence containing the two fields, and give the fields custom labels using <span class="ui">Design View</span>.
          In that case, you can export the view and tell the export engine to use the labels, not the fieldnames:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAQACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAQACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAQACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAQACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.HeaderMode = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.HeaderMode]</span>::Columnlabel</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAQACAAA");</script><p>
          Let's see this in action. It uses a Report view present in the Tutorial database:
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAOACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAOACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAOACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAOACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">export.ExportView(<span class="highlight-literal">"All Contacts-Report"</span>, $exportPath + <span class="highlight-literal">"Contacts with labels as property names.json"</span>, $settings) <span class="highlight-comment"># Create json file with the field labels (and not field names) as property names</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAOACAAA");</script><p>You could also get really funky and define your own headers (columnnames), ignoring everyting in Commence</p><p>
          Beware that this a little more tricky. 
          The custom names must be unique <strong>and</strong> match the number of Commence fields!
          I.e. it must match the number of fields present in the dataset (be it a category, view, or cursor)
          <strong>regardless</strong> of using <span class="code">SkipConnectedItems</span>.
        </p><p>
          To show an example with custom headers without actually modifying the Tutorial database, we have to get a little fancy.
          You will also see the use of some other features of CmcLibNet. 
          Exporting isn't limited to categories or views. You can also export a cursor.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAKACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAKACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAKACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAKACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Json
$settings.CustomHeaders = @(<span class="highlight-literal">"First_Name"</span>,<span class="highlight-literal">"Last_Name"</span>) <span class="highlight-comment"># supply an array of custom headers</span>
$settings.HeaderMode = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.HeaderMode]</span>::CustomLabel
$db = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName  Vovin.CmcLibNet.Database.CommenceDatabase
$cursorToExport = $db.GetCursor(<span class="highlight-literal">"Contact"</span>) <span class="highlight-comment"># create cursor on contact category</span>
$cursorToExport.Columns.AddDirectColumns(<span class="highlight-literal">"firstName"</span>,<span class="highlight-literal">"lastName"</span>) <span class="highlight-comment"># define columns to use</span>
$cursorToExport.Columns.Apply() <span class="highlight-comment"># apply columnset</span>
$cursorToExport.ExportToFile($exportPath + <span class="highlight-literal">"Contacts with custom property names.json"</span>, $settings) <span class="highlight-literal"># create json file with custom property names 'First_Name' and 'Last_Name'.</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAKACAAA");</script><p>
          CmcLibNet can export to HTML as well. Note that Commence already supports exporting to HTML (Save View as HTML, or via the Report Viewer).
          CmcLibNet just adds additional functionality.
          Note that CmcLibNet adds classes and identifiers to every exported element that you can use in an (optional) CSS file.
        </p><div class="codeSnippetContainer"><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAIACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAIACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAIACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$export.Settings.ExportFormat = [Vovin.CmcLibNet.Export.ExportFormat]::Html
$export.Settings.CSSFile = <span class="highlight-literal">"some-stylesheet.css"</span> # include a stylesheet reference <span class="highlight-keyword">in</span> the exported HTML file. Note that <span class="highlight-keyword">this</span> <span class="highlight-keyword">is</span> just a dummy that will be ignored.
$export.Settings.HeaderMode = [Vovin.CmcLibNet.Export.HeaderMode]::Columnlabel # reset header mode. Now would have been an appropriate time to create a <span class="highlight-keyword">new</span> Settings <span class="highlight-keyword">object</span>!
# <span class="highlight-literal">'All Contacts-Report'</span> <span class="highlight-keyword">is</span> a view <span class="highlight-keyword">in</span> the Tutorial database
$export.ExportView(<span class="highlight-literal">"All Contacts-Report"</span>, $exportPath + <span class="highlight-literal">"Contacts with fieldlabels as table headers.html"</span>)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAIACAAA");</script><p>
          You can also export to Text. Note: in most cases, using the built-in export features in Commence are easier and much faster.
          CmcLibNet will be considerably slower, but it does give you better control over the export.
        </p><p>The two main enhancements include:</p><ol><li><p>supplying a custom field delimiter</p></li><li><p>exporting connected fields other than the Name field(!)</p></li></ol><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAEACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAEACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAEACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAEACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Text
$settings.HeadersOnFirstRow = <span class="highlight-keyword">$false</span> <span class="highlight-comment"># set to $true to include fieldnames/labels at the top</span>
$settings.TextDelimiter = <span class="highlight-literal">"|"</span> <span class="highlight-comment"># use pipe symbol as delimiter. Default is tab.</span>
$settings.TextQualifier = <span class="highlight-literal">"#"</span> <span class="highlight-comment"># use (pound) symbol as text-qualifier. Default is " (quote).</span>
$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, $exportPath + <span class="highlight-literal">"Contact.txt"</span>, $settings)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAEACAAA");</script><p>
          Last but not least you can export to Microsoft Excel. That is fairly straightforward. There are a few options you can set, refer to <a href="b8cfaff2-ab77-d017-0c77-20146c7576f6.htm">ExcelUpdateOptions</a>.
        </p><p>Excel does not have to be installed. The export file will be in the xlsx format, so reading the file requires Excel 2007 or higher.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EABACAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EABACAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EABACAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EABACAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve">$settings.CustomRootNode = <span class="highlight-literal">"MySheet"</span> <span class="highlight-comment">#define a sheet name (optional)</span>
$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Excel
$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, $exportPath + <span class="highlight-literal">"Contact.xlsx"</span>, $settings)</pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EABACAAA");</script><p>
          The end. Have fun exporting!
        </p></div><div class="collapsibleAreaRegion" id="Complete"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID3RB')" onkeypress="SectionExpandCollapse_CheckKey('ID3RB', event)" tabindex="0"><img id="ID3RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Complete script</span></div><div id="ID3RBSection" class="collapsibleSection"><p>The complete script</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID0EAAABAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID0EAAABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID0EAAABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID0EAAABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-pshell-cmdlet">Add-Type</span> -Path <span class="highlight-literal">"C:\Program Files\Vovin\Vovin.CmcLibNet\Vovin.CmcLibNet.dll"</span>
$export = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportEngine
$exportPath = <span class="highlight-namespace">[System.Environment]::GetFolderPath([System.Environment+SpecialFolder]</span>::Desktop)
$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"contacts.xml"</span>))
$export.ExportView(<span class="highlight-literal">"Account List"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Account List View.xml"</span>)) <span class="highlight-comment"># note that view names are case-sensitive!</span>
$BrandNew_ExportSettingsObject = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportSettings <span class="highlight-comment"># create Settings object from scratch</span>
$export = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Export.ExportEngine
$settings = $export.Settings
$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Json <span class="highlight-comment"># export to JSON</span>
$settings.SkipConnectedItems = <span class="highlight-keyword">$true</span>
$settings.Canonical = <span class="highlight-keyword">$true</span>
$settings.HeaderMode = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.HeaderMode]</span>::Columnlabel
$export.ExportView(<span class="highlight-literal">"All Contacts-Report"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Contacts with labels as property names.json"</span>), $settings) <span class="highlight-comment"># Create json file with the field labels (and not field names) as property names</span>
$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Json
$settings.CustomHeaders = @(<span class="highlight-literal">"First_Name"</span>,<span class="highlight-literal">"Last_Name"</span>) <span class="highlight-comment"># supply an array of custom headers</span>
$settings.HeaderMode = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.HeaderMode]</span>::CustomLabel
$db = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName  Vovin.CmcLibNet.Database.CommenceDatabase
$cursorToExport = $db.GetCursor(<span class="highlight-literal">"Contact"</span>) <span class="highlight-comment"># create cursor on contact category</span>
$cursorToExport.Columns.AddDirectColumns(<span class="highlight-literal">"firstName"</span>,<span class="highlight-literal">"lastName"</span>) <span class="highlight-comment"># define columns to use</span>
$cursorToExport.Columns.Apply() <span class="highlight-comment"># apply columnset</span>
$cursorToExport.ExportToFile((<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Contacts with custom property names.json"</span>), $settings) <span class="highlight-literal"># create json file with custom property names 'First_Name' and 'Last_Name'.</span>
$export.Settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Html
$export.Settings.CSSFile = <span class="highlight-literal">"some-stylesheet.css"</span> <span class="highlight-comment"># include a stylesheet reference in the exported HTML file. Note that this is just a dummy that will be ignored.</span>
$export.Settings.HeaderMode = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.HeaderMode]</span>::Columnlabel <span class="highlight-comment"># reset header mode. Now would have been an appropriate time to create a new Settings object!</span>
<span class="highlight-literal"># 'All Contacts-Report' is a view in the Tutorial database</span>
$export.ExportView(<span class="highlight-literal">"All Contacts-Report"</span>, $(<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Contacts with fieldlabels as table headers.html"</span>))
$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Text
$settings.HeadersOnFirstRow = <span class="highlight-keyword">$false</span> <span class="highlight-comment"># set to $true to include fieldnames/labels at the top</span>
$settings.TextDelimiter = <span class="highlight-literal">"|"</span> <span class="highlight-comment"># use pipe symbol as delimiter. Default is tab.</span>
$settings.TextQualifier = <span class="highlight-literal">"#"</span> <span class="highlight-comment"># use (pound) symbol as text-qualifier. Default is " (quote).</span>
$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Contact.txt"</span>), $settings)
$settings.ExportFormat = <span class="highlight-namespace">[Vovin.CmcLibNet.Export.ExportFormat]</span>::Excel
$settings.CustomRootNode = <span class="highlight-literal">"MySheet"</span>
$export.ExportCategory(<span class="highlight-literal">"Contact"</span>, (<span class="highlight-pshell-cmdlet">Join-Path</span> -Path $exportPath -ChildPath <span class="highlight-literal">"Contact.xlsx"</span>), $settings)
$export.Close() <span class="highlight-comment"># optional, ExportEngine releases all COM-references automatically</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID0EAAABAAA");</script></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.vovin.nl" target="_blank">Arno van Boven - Vovin IT Services</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:cmclibnet%40vovin.nl?Subject=Vovin.CmcLibNet,%20a%20.Net%20library%20for%20Commence%20RM">feedback</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>