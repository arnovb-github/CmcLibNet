<html><head><meta http-equiv="X-UA-Compatible" content="IE=edge" /><link rel="shortcut icon" href="../icons/favicon.ico" /><link rel="stylesheet" type="text/css" href="../styles/branding.css" /><link rel="stylesheet" type="text/css" href="../styles/branding-en-US.css" /><script type="text/javascript" src="../scripts/branding.js"> </script><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" /><title>Teaser</title><meta name="Language" content="en-us" /><meta name="Microsoft.Help.Id" content="092890cb-e367-4511-b649-8e0f057a12ca" /><meta name="Description" content="A short teaser" /><meta name="Microsoft.Help.ContentType" content="Samples" /><meta name="BrandingAware" content="true" /><link type="text/css" rel="stylesheet" href="../styles/highlight.css" /><script type="text/javascript" src="../scripts/highlight.js"> </script><link rel="stylesheet" type="text/css" href="../styles/branding-Website.css" /><script type="text/javascript" src="../scripts/jquery-3.3.1.min.js"></script><script type="text/javascript" src="../scripts/branding-Website.js"></script><script type="text/javascript" src="../scripts/clipboard.min.js"></script></head><body onload="OnLoad('cs')"><input type="hidden" id="userDataCache" class="userDataStyle" /><div class="pageHeader" id="PageHeader">Vovin.CmcLibNet, a .Net library for Commence RM<form id="SearchForm" method="get" action="#" onsubmit="javascript:TransferToSearchPage(); return false;"><input id="SearchTextBox" type="text" maxlength="200" /><button id="SearchButton" type="submit"></button></form></div><div class="pageBody"><div class="leftNav" id="leftNav"><div id="tocNav"><div class="toclevel0" data-toclevel="0"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/13d8bdcb-02fa-44f3-80db-d84941da7620.htm" title="Vovin.CmcLibNet, a .Net library for Commence RM" tocid="roottoc">Vovin.CmcLibNet, a .Net library for Commence RM</a></div><div class="toclevel1" data-toclevel="1" data-childrenloaded="true"><a class="tocExpanded" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/13d8bdcb-02fa-44f3-80db-d84941da7620.htm" title="Vovin.CmcLibNet documentation" tocid="13d8bdcb-02fa-44f3-80db-d84941da7620">Vovin.CmcLibNet documentation</a></div><div class="toclevel2 current" data-toclevel="2"><a data-tochassubtree="false" href="../html/092890cb-e367-4511-b649-8e0f057a12ca.htm" title="Teaser" tocid="092890cb-e367-4511-b649-8e0f057a12ca">Teaser</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/9b3678d3-f63f-4192-92bb-e430907c8cc4.htm" title="Powershell Basic example" tocid="9b3678d3-f63f-4192-92bb-e430907c8cc4">Powershell Basic example</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/15ef70da-4f25-401c-8336-bf4053e3dbac.htm" title="Powershell Export example" tocid="15ef70da-4f25-401c-8336-bf4053e3dbac">Powershell Export example</a></div><div class="toclevel2" data-toclevel="2"><a data-tochassubtree="false" href="../html/26126b67-d6a9-4ae9-95cb-309d32e261dc.htm" title="VBScript example" tocid="26126b67-d6a9-4ae9-95cb-309d32e261dc">VBScript example</a></div><div class="toclevel2" data-toclevel="2"><a class="tocCollapsed" onclick="javascript: Toggle(this);" href="#!" /><a data-tochassubtree="true" href="../html/551759d4-7595-29d9-745f-14d8e9379f92.htm" title="API Reference" tocid="8902777a-ec4f-48ac-97d2-ee7b0405bf80">API Reference</a></div></div><div id="tocResizableEW" onmousedown="OnMouseDown(event);"></div><div id="TocResize" class="tocResize"><img id="ResizeImageIncrease" src="../icons/TocOpen.gif" onclick="OnIncreaseToc()" alt="Click or drag to resize" title="Click or drag to resize" /><img id="ResizeImageReset" src="../icons/TocClose.gif" style="display:none" onclick="OnResetToc()" alt="Click or drag to resize" title="Click or drag to resize" /></div></div><div class="topicContent" id="TopicContent"><table class="titleTable"><tr><td class="logoColumn"><img src="../icons/Help.png" /></td><td class="titleColumn"><h1>Teaser</h1></td></tr></table><span class="introStyle"></span> <div class="introduction"><p>A short teaser</p></div><div class="collapsibleAreaRegion"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID0RB')" onkeypress="SectionExpandCollapse_CheckKey('ID0RB', event)" tabindex="0"><img id="ID0RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Demonstrates</span></div><div id="ID0RBSection" class="collapsibleSection"><p>
         How querying a <strong>Commence</strong> database is made easier with <strong>Vovin.CmcLibNet</strong></p></div><div class="collapsibleAreaRegion" id="Section1"><span class="collapsibleRegionTitle" onclick="SectionExpandCollapse('ID2RB')" onkeypress="SectionExpandCollapse_CheckKey('ID2RB', event)" tabindex="0"><img id="ID2RBToggle" class="collapseToggle" src="../icons/SectionExpanded.png" />Getting basic info</span></div><div id="ID2RBSection" class="collapsibleSection"><p>Imagine you want a list of all categories and their item numbers. Something along the lines of:</p>
          Category 'Accounts' contains 12 items<br />
          Category 'Contacts' contains 75 items<br />
          ..etc..<br /><p>A simple enough requirement, but not that straightforward to achieve.
          Commence does not provide easy access to that kind of information.
          You have to use the dreaded DDE syntax.
        </p><p>Let's see that in action in Visual Basic Script</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAIABAAA_tab1" class="codeSnippetContainerTabSingle">VBScript</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAIABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAIABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAIABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-keyword">Option</span> <span class="highlight-keyword">Explicit</span> <span class="highlight-comment">'enforce explicit variable declaration</span>
<span class="highlight-keyword">Const</span> DELIMITER = <span class="highlight-literal">"||"</span> <span class="highlight-comment">'define a delimiter</span>
<span class="highlight-keyword">Dim</span> oCmc <span class="highlight-comment">'Commence.DB</span>
<span class="highlight-keyword">Dim</span> oConv <span class="highlight-comment">'ICommenceConversation</span>
<span class="highlight-keyword">Dim</span> oCategoryList <span class="highlight-comment">'array to hold out category names</span>
<span class="highlight-keyword">Dim</span> sDdeCommand <span class="highlight-comment">'string to hold DDE command text</span>
<span class="highlight-keyword">Dim</span> sCategoryName

<span class="highlight-keyword">Set</span> oCmc = <span class="highlight-keyword">CreateObject</span>(<span class="highlight-literal">"Commence.DB"</span>)
<span class="highlight-keyword">Set</span> oConv = oCmc.GetConversation(<span class="highlight-literal">"Commence"</span>, oCmc.Path)
sDdeCommand = <span class="highlight-literal">"[GetCategoryNames("</span> &amp; DELIMITER &amp; <span class="highlight-literal">")]"</span>
oCategoryList = <span class="highlight-keyword">Split</span>(oConv.Request(sDdeCommand), DELIMITER)
<span class="highlight-keyword">For</span> <span class="highlight-keyword">Each</span> sCategoryName In oCategoryList
  sDdeCommand = <span class="highlight-literal">"[GetItemCount("</span> &amp; sCategoryName &amp; <span class="highlight-literal">")]"</span>
  WScript.Echo <span class="highlight-literal">"Category "</span> &amp; sCategoryName &amp; <span class="highlight-literal">" contains "</span> &amp; oConv.Request(sDdeCommand) &amp; <span class="highlight-literal">" items"</span>
<span class="highlight-keyword">Next</span>

<span class="highlight-keyword">Set</span> oConv = <span class="highlight-keyword">Nothing</span>
<span class="highlight-keyword">Set</span> oCmc = <span class="highlight-keyword">Nothing</span>
WScript.Quit <span class="highlight-number">0</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAIABAAA");</script><p>This will work fine, but it is quite a lot of coding.
          And if you are not that experienced with Commence scripting,
          figuring out the syntax for the DDE requests can be quite a challenge.</p><p>Also, because this example uses the Windows Scripting Host, it isn't that trivial to run on 64-bit Windows, either.
          You have to explicitly tell it to use the <strong>Windows Based Script Host</strong>.
        </p><p>But wait, what is with this old-school VBScript stuff?
         Surely you can use <strong>PowerShell</strong> to talk to any COM interop capable application?
         Yes, we can. So let's do the same in PowerShell:</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EAEABAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EAEABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EAEABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EAEABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-comment"># get a list of categories and item counts using PowerShell</span>

<span class="highlight-comment"># specify a (badly chosen) delimiter (not going into details why it's bad)</span>
$delim = <span class="highlight-literal">'|'</span>

<span class="highlight-comment"># create COM reference to Commence</span>
$cmc = <span class="highlight-pshell-cmdlet">New-Object</span> -ComObject Commence.DB

<span class="highlight-comment"># lets see what we have</span>
$cmc | <span class="highlight-pshell-cmdlet">Get-Member</span>

<span class="highlight-comment"># Get-Member only returns some generic .Net methods that all objects share.</span>
<span class="highlight-comment"># To actually get something from Commence, you must use the IDispatch interface.</span>

<span class="highlight-comment"># get path</span>
$path = <span class="highlight-literal">[System.__ComObject].InvokeMember('Path',[System.Reflection.BindingFlags]</span>::GetProperty,<span class="highlight-keyword">$null</span>,$cmc,<span class="highlight-keyword">$null</span>)

<span class="highlight-comment"># create a reference to the ICommenceConversation interface (i.e. call DDE)</span>
$dde = <span class="highlight-literal">[System.__ComObject].InvokeMember('GetConversation',[System.Reflection.BindingFlags]</span>::InvokeMethod,<span class="highlight-keyword">$null</span>,$cmc, @(<span class="highlight-literal">'Commence'</span>, $path))

<span class="highlight-comment"># construct request</span>
$request = <span class="highlight-literal">"[GetCategoryNames($delim)]"</span>

<span class="highlight-comment"># call a method of ICommenceConversation</span>
$categories = <span class="highlight-literal">[System.__ComObject].InvokeMember('Request',[System.Reflection.BindingFlags]</span>::InvokeMethod,<span class="highlight-keyword">$null</span>,$dde,$request)

<span class="highlight-comment"># loop through categories</span>
foreach ($s in $categories.Split($delim))
{
$request = <span class="highlight-literal">"[GetItemCount(`"</span><span class="highlight-literal">" + $s + "</span>`<span class="highlight-literal">")]"</span>
<span class="highlight-pshell-cmdlet">Write-Host</span> Category $s contains (<span class="highlight-literal">[System.__ComObject].InvokeMember('Request',[System.Reflection.BindingFlags]</span>::InvokeMethod,<span class="highlight-keyword">$null</span>,$dde, $request)) items.
}

<span class="highlight-comment"># release COM references so Commence can be closed</span>
<span class="highlight-namespace">[System.Runtime.Interopservices.Marshal]</span>::ReleaseComObject($dde) | <span class="highlight-pshell-cmdlet">Out-Null</span>
<span class="highlight-namespace">[System.Runtime.Interopservices.Marshal]</span>::ReleaseComObject($cmc) | <span class="highlight-pshell-cmdlet">Out-Null</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EAEABAAA");</script><p>Yikes! That is some scary code, right? 
          While it proves that it is perfectly possible to talk to Commence from Powershell directly, 
          it also shows that it is certainly no walk in the park.
          There is this IDispatch stuff to invoke Commence members, and then there is the mysterious DDE syntax Commence uses.
          It is certainly non-trivial.</p><p>Okay, so let's do the same, again using <strong>Powershell</strong> but this time also using <strong>Vovin.CmcLibNet</strong>.
          By the way, it doesn't matter if you run 32- or 64-bit Powershell.</p><div class="codeSnippetContainer"><div class="codeSnippetContainerTabs"><div id="ID1EABABAAA_tab1" class="codeSnippetContainerTabSingle">PowerShell</div></div><div class="codeSnippetContainerCodeContainer"><div class="codeSnippetToolBar"><div class="codeSnippetToolBarText"><a id="ID1EABABAAA_copyCode" href="#" class="copyCodeSnippet" onclick="javascript:CopyToClipboard('ID1EABABAAA');return false;" title="Copy">Copy</a></div></div><div id="ID1EABABAAA_code_Div1" class="codeSnippetContainerCode" style="display: block"><pre xml:space="preserve"><span class="highlight-pshell-cmdlet">Add-Type</span> -Path <span class="highlight-literal">"C:\Program Files\Vovin\Vovin.CmcLibNet\Vovin.CmcLibNet.dll"</span> <span class="highlight-comment"># tell Powershell where to find CmcLibNet.</span>
$db = <span class="highlight-pshell-cmdlet">New-Object</span> -TypeName Vovin.CmcLibNet.Database.CommenceDatabase <span class="highlight-comment"># create regular .Net object, exposed by CmcLibNet</span>
<span class="highlight-comment"># call some methods and output results</span>
$db.GetCategorynames() | foreach {
  <span class="highlight-pshell-cmdlet">Write-Host</span> Category <span class="highlight-keyword">$_</span> contains  $db.GetItemCount(<span class="highlight-keyword">$_</span>) items
}
$db.Close() <span class="highlight-comment"># optional but recommended</span></pre></div></div></div><script type="text/javascript">AddLanguageTabSet("ID1EABABAAA");</script><p>I don't know about you, but I would argue that that is a lot simpler!</p></div></div></div><div id="pageFooter" class="pageFooter"><p><a href="http://www.vovin.nl" target="_blank">Arno van Boven - Vovin IT Services</a></p><div class="feedbackLink">Send comments on this topic to
        <a id="HT_MailLink" href="mailto:cmclibnet%40vovin.nl?Subject=Vovin.CmcLibNet,%20a%20.Net%20library%20for%20Commence%20RM">feedback</a></div>
        <script type="text/javascript">
        var HT_mailLink = document.getElementById("HT_MailLink");
        var HT_mailLinkText = HT_mailLink.innerHTML;
        HT_mailLink.href += ": " + document.title + "\u0026body=" + encodeURIComponent("Your feedback is used to improve the documentation and the product. Your e-mail address will not be used for any other purpose and is disposed of after the issue you report is resolved. While working to resolve the issue that you report, you may be contacted via e-mail to get further details or clarification on the feedback you sent. After the issue you report has been addressed, you may receive an e-mail to let you know that your feedback has been addressed.");
        HT_mailLink.innerHTML = HT_mailLinkText;
        </script></div></body></html>